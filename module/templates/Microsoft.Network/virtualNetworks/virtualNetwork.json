{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "northeurope",
        "westeurope"
      ],
      "metadata": {
        "description": "Location of the Virtual Network"
      }
    },
    "addressPrefixes": {
      "type": "array",
      "metadata": {
        "description": "The CIDR ranges allocated to the Virtual Network"
      }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The DNS Servers to apply to Virtual Network. Default value \"\" will use Azure provided DNS"
      }
    },
    "subnets": {
      "type": "array",
      "metadata": {
        "description": "The subnets to provision in the Virtual Network"
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Tags to apply to Virtual Network"
      }
    }
  },
  "variables": {
    "subnets": {
      "copy": [
        {
          "name": "subnets",
          "count": "[length(parameters('subnets'))]",
          "input": {
            "name": "[parameters('subnets')[copyIndex('subnets')].name]",
            "properties": {
              "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].addressPrefix]",
              "networkSecurityGroup": {
                "id": "[if(contains(parameters('subnets')[copyIndex('subnets')], 'networkSecurityGroupResourceGroup'), resourceId(parameters('subnets')[copyIndex('subnets')].networkSecurityGroupResourceGroup, 'Microsoft.Network/networkSecurityGroups', parameters('subnets')[copyIndex('subnets')].networkSecurityGroupName), resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnets')[copyIndex('subnets')].networkSecurityGroupName))]"
              },
              "routeTable": "[if(contains(parameters('subnets')[copyIndex('subnets')], 'routeTableName'), json(concat('{\"id\": \"', if(contains(parameters('subnets')[copyIndex('subnets')], 'routeTableResourceGroup'), resourceId(parameters('subnets')[copyIndex('subnets')].routeTableResourceGroup, 'Microsoft.Network/routeTables', parameters('subnets')[copyIndex('subnets')].routeTableName), resourceId('Microsoft.Network/routeTables', parameters('subnets')[copyIndex('subnets')].routeTableName)), '\"}')), json('null'))]",
              "serviceEndpoints": "[if(contains(parameters('subnets')[copyIndex('subnets')], 'serviceEndpoints'), parameters('subnets')[copyIndex('subnets')].serviceEndpoints, json('null'))]"
            }
          }
        }
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "apiVersion": "2018-11-01",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('addressPrefixes')]"
        },
        "dhcpOptions": {
          "dnsServers": "[parameters('dnsServers')]"
        },
        "subnets": "[variables('subnets').subnets]",
        "enableDdosProtection": false,
        "enableVmProtection": true
      }
    }
  ],
  "outputs": {}
}