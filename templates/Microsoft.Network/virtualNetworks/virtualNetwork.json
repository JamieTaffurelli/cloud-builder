{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.4.1.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the Virtual Network"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": ["northeurope", "westeurope"],
      "metadata": {
        "description": "Location of the Virtual Network"
      }
    },
    "addressPrefixes": {
      "type": "array",
      "metadata": {
        "description": "The CIDR ranges allocated to the Virtual Network"
      }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The DNS Servers to apply to Virtual Network. Default value [] will use Azure provided DNS"
      }
    },
    "subnets": {
      "type": "array",
      "metadata": {
        "description": "The subnets to provision in the Virtual Network"
      }
    },
    "gatewaySubnetPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The CIDR range of the gateway subnet, leave empty to exclude gateway subnet deployment"
      }
    },
    "azureFirewallSubnetPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The CIDR range of the Azure Firewall, leave empty to exclude Azure Firewall subnet deployment"
      }
    },
    "logAnalyticsSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The Subscription ID of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "logAnalyticsResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The Resource Group of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Tags to apply to Virtual Network"
      }
    }
  },
  "variables": {
    "subnets": {
      "copy": [
        {
          "name": "subnets",
          "count": "[length(parameters('subnets'))]",
          "input": {
            "name": "[parameters('subnets')[copyIndex('subnets')].name]",
            "properties": {
              "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].addressPrefix]",
              "networkSecurityGroup": "[if(contains(parameters('subnets')[copyIndex('subnets')], 'networkSecurityGroupName'), json(concat('{\"id\": \"', resourceId(if(contains(parameters('subnets')[copyIndex('subnets')], 'networkSecurityGroupSubscriptionId'), parameters('subnets')[copyIndex('subnets')].networkSecurityGroupSubscriptionId, subscription().subscriptionId), if(contains(parameters('subnets')[copyIndex('subnets')], 'networkSecurityGroupResourceGroupName'), parameters('subnets')[copyIndex('subnets')].networkSecurityGroupResourceGroupName, resourceGroup().name), 'Microsoft.Network/networkSecurityGroups', parameters('subnets')[copyIndex('subnets')].networkSecurityGroupName), '\"}')), json('null'))]",
              "routeTable": "[if(contains(parameters('subnets')[copyIndex('subnets')], 'routeTableName'), json(concat('{\"id\": \"', resourceId(if(contains(parameters('subnets')[copyIndex('subnets')], 'routeTableNameSubscriptionId'), parameters('subnets')[copyIndex('subnets')].routeTableNameSubscriptionId, subscription().subscriptionId), if(contains(parameters('subnets')[copyIndex('subnets')], 'routeTableNameResourceGroupName'), parameters('subnets')[copyIndex('subnets')].routeTableNameResourceGroupName, resourceGroup().name), 'Microsoft.Network/routeTables', parameters('subnets')[copyIndex('subnets')].routeTableName), '\"}')), json('null'))]",
              "serviceEndpoints": "[if(contains(parameters('subnets')[copyIndex('subnets')], 'serviceEndpoints'), parameters('subnets')[copyIndex('subnets')].serviceEndpoints, json('null'))]"
            }
          }
        }
      ]
    },
    "gatewaySubnet": [
      {
        "name": "GatewaySubnet",
        "properties": {
          "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
        }
      }
    ],
    "azureFirewallSubnet": [
      {
        "name": "AzureFirewallSubnet",
        "properties": {
          "addressPrefix": "[parameters('azureFirewallSubnetPrefix')]"
        }
      }
    ],
    "gatewaySubnetUnion": "[if(empty(parameters('gatewaySubnetPrefix')), variables('subnets').subnets, union(variables('subnets').subnets, variables('gatewaySubnet')))]",
    "firewallSubnetUnion": "[if(empty(parameters('azureFirewallSubnetPrefix')), variables('gatewaySubnetUnion'), union(variables('gatewaySubnetUnion'), variables('azureFirewallSubnet')))]",
    "diagnosticsEnabled": true,
    "diagnosticsRetentionInDays": 365
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "apiVersion": "2018-11-01",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('addressPrefixes')]"
        },
        "dhcpOptions": {
          "dnsServers": "[parameters('dnsServers')]"
        },
        "subnets": "[variables('firewallSubnetUnion')]",
        "enableVmProtection": true,
        "enableDdosProtection": false
      },
      "resources": [
        {
          "apiVersion": "2015-07-01",
          "type": "/providers/diagnosticSettings",
          "name": "Microsoft.Insights/service",
          "properties": {
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              }
            ],
            "logs": [
              {
                "category": "VMProtectionAlerts",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              }
            ],
            "workspaceId": "[resourceId(parameters('logAnalyticsSubscriptionId'), parameters('logAnalyticsResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
          ]
        }
      ]
    }
  ],
  "outputs": {
    "virtualNetwork": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '2018-11-01', 'Full')]"
    }
  }
}
