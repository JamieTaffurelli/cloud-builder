{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.2.1.0",
  "parameters": {
    "publicIPName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "The name of the Public IP that you wish to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": ["northeurope", "westeurope"],
      "metadata": {
        "description": "The location to deploy the Public IP to"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": ["Basic", "Standard"],
      "metadata": {
        "description": "The SKU of the Public IP"
      }
    },
    "publicIpAllocationMethod": {
      "type": "string",
      "defaultValue": "static",
      "allowedValues": ["static", "dynamic"],
      "metadata": {
        "description": "Method of IP allocation when requested (static or dynamic)"
      }
    },
    "publicIPAddressVersion": {
      "type": "string",
      "defaultValue": "IPv4",
      "allowedValues": ["IPv4", "IPv6"],
      "metadata": {
        "description": "Specifies IPv4 or IPv6 IP address"
      }
    },
    "domainNameLabel": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name"
      }
    },
    "dnsSettings": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Domain name label, fqdn and reverse fqdn"
      }
    },
    "ipTags": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "List of tags for Public IP address"
      }
    },
    "ipAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specify if allocation is static"
      }
    },
    "idleTimeoutInMinutes": {
      "type": "int",
      "defaultValue": 4,
      "minValue": 4,
      "maxValue": 30,
      "metadata": {
        "description": "Idle timeout for inbound originated flow"
      }
    },
    "zones": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Specify Availability Zones"
      }
    },
    "logAnalyticsSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The Subscription ID of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "logAnalyticsResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The Resource Group of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "tags": {
      "type": "object"
    }
  },
  "variables": {
    "domainNameLabel": {
      "domainNameLabel": "[parameters('domainNameLabel')]"
    },
    "dnsSettings": "[union(variables('domainNameLabel'), parameters('dnsSettings'))]",
    "diagnosticsEnabled": true,
    "diagnosticsRetentionInDays": 365
  },
  "resources": [
    {
      "name": "[parameters('publicIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
        "publicIPAddressVersion": "[parameters('publicIPAddressVersion')]",
        "dnsSettings": "[variables('dnsSettings')]",
        "ipTags": "[parameters('ipTags')]",
        "ipAddress": "[parameters('ipAddress')]",
        "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]"
      },
      "zones": "[parameters('zones')]",
      "resources": [
        {
          "apiVersion": "2015-07-01",
          "type": "/providers/diagnosticSettings",
          "name": "Microsoft.Insights/service",
          "properties": {
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              }
            ],
            "logs": [
              {
                "category": "DDoSProtectionNotifications",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "DDoSMitigationFlowLogs",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "DDoSMitigationReports",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              }
            ],
            "workspaceId": "[resourceId(parameters('logAnalyticsSubscriptionId'), parameters('logAnalyticsResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
          },
          "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPName'))]"
          ]
        }
      ]
    }
  ],
  "outputs": {
    "publicIP": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName')), '2020-11-01', 'Full')]"
    }
  }
}
